#include <vector>

class Solution {
public:
    bool canJump(std::vector<int>& nums) {
        int n = nums.size();
        int farthest = 0;  // Initialize the farthest position reachable
        
        for (int i = 0; i < n; ++i) {
        // If the current index is greater than the farthest reachable position, return false
            if (i > farthest) {
                return false;
            }
            
            // Update the farthest reachable position from the current index
            farthest = std::max(farthest, i + nums[i]);
            
            // If the farthest position reaches the end, return true
            if (farthest >= n - 1) {
                return true;
            }
        }
        
        return true;
    }
};
